name: Build

on:
  pull_request:
  schedule:
    - cron: '0 4 * * *'
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: macos-latest
    steps:
      - name: Get Version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Install Ionic
        run: |
          npm install -g @ionic/cli@6.9.1

      - name: Install Dependencies
        run: |
          npm install

      - name: Lint
        run: |
          npm run lint

      - name: Build Ionic App
        run: |
          ionic build
        env:
          REACT_APP_VERSION: ${{ steps.get_version.outputs.VERSION }}

      - name: Install astilectron-bundler
        run: |
          go get -u github.com/asticode/go-astilectron-bundler/...
          go install github.com/asticode/go-astilectron-bundler/astilectron-bundler

      - name: Build Electron App
        run: |
          make build-electron

      - name: Import Apple Code-signing Certificates and Keys
        if: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'schedule' }}
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.MACOS_CERTIFICATES_P12_PASSWORD }}

      - name: Code-sign macOS App
        if: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'schedule' }}
        run: |
          codesign --deep --force --options runtime --sign "Developer ID Application: Rico Berger" cmd/electron/output/darwin-amd64/kubenav.app

      - name: Compress Electron App
        run: |
          cd cmd/electron/output/darwin-amd64 && zip -r -X kubenav-darwin-amd64.zip kubenav.app
          cd ../linux-amd64 && zip -r -X kubenav-linux-amd64.zip kubenav
          cd ../windows-amd64 && zip -r -X kubenav-windows-amd64.zip kubenav.exe

      - name: Upload macOS App to the Notarization Service
        if: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event_name == 'schedule' }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo -n "$AC_AUTH_KEY" > ~/.appstoreconnect/private_keys/AuthKey_${AC_API_KEY}.p8
          xcrun altool --notarize-app --primary-bundle-id "io.kubenav.kubenav.zip" --apiKey $AC_API_KEY --apiIssuer $AC_ISSUER --file cmd/electron/output/darwin-amd64/kubenav-darwin-amd64.zip > /dev/null 2>&1
        env:
          AC_AUTH_KEY: ${{ secrets.AC_AUTH_KEY }}
          AC_API_KEY: ${{ secrets.AC_API_KEY }}
          AC_ISSUER: ${{ secrets.AC_ISSUER }}

      - name: Remove AuthKey for Notarization Service
        if: ${{ always() }}
        run: |
          rm -rf ~/.appstoreconnect/private_keys/AuthKey_${AC_API_KEY}.p8
        env:
          AC_API_KEY: ${{ secrets.AC_API_KEY }}

      - name: Upload Artifact (macOS)
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'schedule' }}
        uses: actions/upload-artifact@v2
        with:
          name: kubenav-darwin-amd64.zip
          path: cmd/electron/output/darwin-amd64/kubenav-darwin-amd64.zip

      - name: Upload Artifact (Linux)
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'schedule' }}
        uses: actions/upload-artifact@v2
        with:
          name: kubenav-linux-amd64.zip
          path: cmd/electron/output/linux-amd64/kubenav-linux-amd64.zip

      - name: Upload Artifact (Windows)
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'schedule' }}
        uses: actions/upload-artifact@v2
        with:
          name: kubenav-windows-amd64.zip
          path: cmd/electron/output/windows-amd64/kubenav-windows-amd64.zip

      - name: Upload Artifacts to Release
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        run: |
          utils/scripts/upload.sh cmd/electron/output/darwin-amd64/kubenav-darwin-amd64.zip application/zip
          utils/scripts/upload.sh cmd/electron/output/linux-amd64/kubenav-linux-amd64.zip application/zip
          utils/scripts/upload.sh cmd/electron/output/windows-amd64/kubenav-windows-amd64.zip application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
