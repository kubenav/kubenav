name: Docker

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Docker Tag
        if: ${{ github.event_name == 'push' }}
        run: |
          echo ::set-env name=DOCKER_TAG::${GITHUB_SHA::8}

      - name: Set Docker Tag
        if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
        run: |
          echo ::set-env name=DOCKER_TAG::${GITHUB_REF/refs\/tags\//}

      - name: Docker Buildx (prepare)
        id: prepare
        run: |
          DOCKER_IMAGE=kubenav/kubenav
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} --tag ${DOCKER_IMAGE}:${{ env.DOCKER_TAG  }} --file cmd/server/Dockerfile .

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin

      - name: Docker Buildx (push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      - name: Clear
        if: ${{ always() }}
        run: |
          rm -f ${HOME}/.docker/config.json
